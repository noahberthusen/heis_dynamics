import numpy as np
import matplotlib.pyplot as plt

VTDFidelity = [1.0, 0.9788881447417134, 0.959847324570478, 0.9473690149690069, 0.935840828999919, 0.9181455036759614, 0.8951442748724442, 0.8743052567025529, 0.8562687712473823, 0.8321292452989828]
BestCompressionFidelity = [1.0, 0.9871021261914762, 0.972913451453921, 0.9529874838569097, 0.945488377747851, 0.9275646884731024, 0.9051154662330938, 0.8831344955245438, 0.8581269619570634, 0.8413775735427492]
VTCCompressionResult = [1.0, 0.9912982844584503, 0.9861966912314986, 0.9865735948809541, 0.9902200960355317, 0.9904691347372379, 0.9810699222155438, 0.9921513981018278, 0.9915187219682493, 0.9911165212780095]
TrotterFidelity = [1.0, 0.9871021261914762, 0.9813792646492695, 0.974645894940734, 0.9718688958054528, 0.9627875797693336, 0.949614689720628, 0.9389483145235735, 0.9218858797268967, 0.9047331634030739]
BadTrotterFidelity = [1.0, 0.9999996760348007, 0.999996185220401, 0.9999878936781869, 0.9999781201778797, 0.9999692340840002, 0.9999583636349358, 0.9999410792502006, 0.9999201409475474, 0.999903816963102, 0.9998893175547368, 0.9998631046571921, 0.9998272053226438, 0.9997980763614184, 0.9997723704821672, 0.9997331618129509, 0.999672868779859, 0.9995812065185649, 0.9994752611937768, 0.9994258606867896, 0.9994644731102267, 0.9995234311805692, 0.9995255672716007, 0.9994584207483659, 0.9993416866751185, 0.9992009150106594, 0.9991085621575807, 0.9991429785600672, 0.9992220055653556, 0.9991498479451671, 0.9988962896636862, 0.9986147143683229, 0.9984515544121716, 0.9984768075724482, 0.9986185949676728, 0.9986812292888693, 0.9985580989266223, 0.9983564210433201, 0.9982724178554119, 0.9982943667699875, 0.9981618774779669, 0.9978164068210865, 0.9975491771835087, 0.9975528478488194, 0.9977245877221598, 0.9977927779008162, 0.9975174576342501, 0.9970948294901916, 0.9969827348875075, 0.9971584048422876, 0.9972505883893965, 0.9971095355091764, 0.9967063341932461, 0.9960814496379577, 0.9955090004341868, 0.9952388288057445, 0.9952548711654862, 0.9954362857451691, 0.9957083253587244, 0.9959350547712083, 0.9958677131721712, 0.9955229273303026, 0.9952754719235571, 0.9951643174202118, 0.9949122431855134, 0.9946284225017094, 0.9944013350731197, 0.9940302796645786, 0.9937221622735385, 0.9936086126964672, 0.9931604184490929, 0.9924115796563369, 0.9922972302836552, 0.9930985390240762, 0.993867723669988, 0.9935445689028216, 0.9922910709118313, 0.9913622655198235, 0.9913258761312806, 0.9916114629581242, 0.9917655617021706, 0.991442564083776, 0.9903155274652147, 0.9890538397363001, 0.9885163370220055, 0.9883900341930968, 0.9882493234907466, 0.9885176838768375, 0.9892479733128248, 0.9893404183851486, 0.9881827668232189, 0.9868033676521426, 0.9859542514565504, 0.9852395248425131, 0.9849795113441181, 0.9856310962692987, 0.9861451415319554, 0.9857277826541976, 0.9846226672878308, 0.9828211291595877, 0.9811793189441593, 0.9813326158175416, 0.9827187598316872, 0.9829418842247701, 0.9809097526141964, 0.9776475759582385, 0.9749535283434599, 0.9737756742503961, 0.9733719720978804, 0.9724474603435974, 0.9713525676017389, 0.9716819646660264, 0.973241358154555, 0.9740697108685229, 0.973450337309149, 0.9717656134193233, 0.9691990493882833, 0.9669745384441218, 0.9667200851967201, 0.9678475873448563, 0.9677994555679469, 0.9650300444340546, 0.9612039079350213, 0.9588633968653083, 0.958061045202544, 0.9581645867089361, 0.9587062739715632, 0.957092430121252, 0.9522366056170911, 0.9480109273234412, 0.9473627171393518, 0.9485120963896456, 0.9490773057604439, 0.9482628010611989, 0.9454963979601337, 0.9411676892262926, 0.9376080172218519, 0.9361374131209502, 0.9351463596636904, 0.9341089203024235, 0.9345331855220271, 0.9347444558279467, 0.931191219176316, 0.9239852901675838, 0.915522752148272, 0.9088686028398661, 0.9074972075132826, 0.9102615542424798, 0.9115787932625695, 0.9092994079817684, 0.9057546392368138, 0.9027642556250713, 0.9004091442205729, 0.8978799441085091, 0.8944948360057813, 0.8904714219826866, 0.8853878228157603, 0.8782814573895171, 0.8704612309055377, 0.8651988955693359, 0.8645959334600983, 0.8668779445435539, 0.8668158364863173, 0.8621101988175722, 0.8562890113688989, 0.8512826191804411, 0.8449540781629382, 0.8381585956383816, 0.8343156505170193, 0.8327614807820369, 0.8306405308849563, 0.8271551869223798, 0.8207712433583, 0.8098034783147302, 0.7987302837308421, 0.7941771597803604, 0.7938000838793798, 0.7895512322113581, 0.7799822525169154, 0.7693445049007961, 0.7602844209461854, 0.7537009210830216, 0.7491675240291098, 0.7453779353526058, 0.74263245047293, 0.7407391459628, 0.7376259517291062, 0.7330905456334383, 0.7273318431608702, 0.7185452208811347, 0.7074124490722817, 0.6968993131949484, 0.687521993258012, 0.6788184411659032, 0.6710755956242332, 0.6631698388380192, 0.6530704749158911, 0.6407038512572094, 0.6289721831484366, 0.6214448856562719, 0.6182466833124781, 0.6152398321272347, 0.6075740329669389, 0.5944666639989356, 0.5806542289157581, 0.5712069734099985, 0.5665133343835224, 0.5630816189284671, 0.5564725345205752, 0.5452621226367136, 0.5323574973719776, 0.5193240924949468, 0.5049880392576941, 0.49229269277899207, 0.48631122484736494, 0.4850116064080549, 0.4812285860417756, 0.4712497477173817, 0.45663498272363684, 0.44125867071291053, 0.4289970845971896, 0.4216028513613016, 0.41587670361009826, 0.4062455399489374, 0.3930694737674862, 0.38123624853860255, 0.3701529956095119, 0.35635407926606916, 0.3433662964834691, 0.33617638074331574, 0.33045993832142695, 0.31887129641584044, 0.3028282381183265, 0.28835811811480233, 0.27773880486161767, 0.2711804837427487, 0.26793402410227546, 0.2637205905969935, 0.2550946093612233, 0.24394616793553264, 0.23251510417446003, 0.22076987187902355, 0.20964809828688075, 0.20073342001711134, 0.19379176677896234, 0.1868917118911296, 0.1784669173321838, 0.16885872301425878, 0.1596835155541531, 0.15241107837156237, 0.1474823022384656, 0.1438999155356283, 0.140129983493435, 0.13517785675922894, 0.12833354098462293, 0.11987748839850958, 0.1114655168950821, 0.10390592473219575, 0.09709175694756154, 0.09193688427256565, 0.08879042417120926, 0.08526054298626058, 0.07840236051233378, 0.06913571362326293, 0.06170902684066908, 0.05748506926135175, 0.05380459168161505, 0.04938381671623834, 0.044846413405565076, 0.039423775449285055, 0.03327188373973833, 0.028498511007940854, 0.025440997131730304, 0.0234297296377765, 0.023206644016071504, 0.02450547088921259, 0.02440696674850072, 0.02152923422961151, 0.017884545257974865, 0.01509466412197696, 0.013094985154191547, 0.011640017735905422, 0.010724369678723264, 0.00993546641678801, 0.008778157723397491, 0.007487874136669524, 0.0066914962988139865, 0.006704468865980433, 0.007203188921433208, 0.007414573846412429, 0.006679128996710032, 0.005295117084074429, 0.00411281595286752, 0.003533158663674944, 0.0035586267385333305, 0.003792174961781412, 0.003959891402625569, 0.004244179992200689, 0.004659685302656565, 0.004674929755659958, 0.004222328954672907]

ntrot = 76
dtrot = 0.2
tf = 130
shots = 2**13
dt = 0.43333333333333335

fig, ax = plt.subplots(1, 1, figsize=(6,3.25))
plt.rcParams['font.family'] = 'serif'
plt.rcParams['font.serif'] = ['Computer Modern Roman'] + plt.rcParams['font.serif']

ts = [i*ntrot*dtrot for i in range(int(np.ceil(tf / (ntrot * dtrot)))+1)]

ax.plot(ts, TrotterFidelity, label="Ideal VTC", c='#ff7f0e', linewidth=2)
# ax.errorbar(VTDStepList.index, mean, yerr=err, linestyle="--", marker='.', label="VTC", markersize=5, c='g')
ax.plot([i*dt for i in range(301)], BadTrotterFidelity, label="Trotter $(3 \ell)$", c='#CDCDCD', zorder=0, linewidth=2)

ax.plot([0.0, 15.2, 30.4, 45.6, 60.8, 76.0, 91.2, 106.4, 121.6,
              136.79999999999998], VTDFidelity, linestyle="--", marker='.', markersize=5, c='g', linewidth=2, label="VTC")
ax.scatter([i*dtrot*ntrot for i in range(len(BestCompressionFidelity))], BestCompressionFidelity, label="Best Compression", marker='x', c='k')
ax.scatter([i*dtrot*ntrot for i in range(len(VTCCompressionResult))], VTCCompressionResult, label="VTC Overlap", marker='x', c='r')
ax.axvspan(65, 150, facecolor='#9cce9c', alpha=0.2)
ax.margins(x=0.05, y=0)
ax.set_xlim(0,140)

ax.set_ylabel(r'$\mathcal{F}(t,  \hat{\vartheta}_t)$', fontsize=16)
ax.set_xlabel('$Jt$', fontsize=16)
ax.tick_params(axis='x', labelsize=12)
ax.tick_params(axis='y', labelsize=12)
ax.legend(loc='lower left', fontsize=12)

for axis in ['top','bottom','left','right']:
    ax.spines[axis].set_linewidth(1.3)

plt.savefig('../figures/final/statevector_results.png', dpi=600, transparent=False, bbox_inches='tight')


# plt.show()